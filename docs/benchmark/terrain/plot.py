import math
import matplotlib
import matplotlib.pyplot as plt
import numpy as np

# AVG from 3 probes (each lasted 1 min)
geo_lev5 = round(172429 / 1000, 2)
geo_lev10 = round(269026 / 1000, 2)
cdlod_lev5 = round(570565 / 1000, 2)
cdlod_lev10 = round(772622 / 1000, 2)

geo_ms_lev5 = [
    19.607843, 18.518519, 18.181818, 16.129032, 15.625000, 15.625000, 15.384615, 16.129032, 15.625000, 14.925373, 15.151515, 15.384615,
    15.384615, 14.705882, 14.925373, 15.384615, 14.492754, 14.705882, 14.492754, 14.285714, 14.084507, 13.888889, 13.888889, 13.888889,
    13.698630, 13.513514, 14.285714, 13.888889, 14.285714, 13.698630, 14.285714, 14.285714, 14.705882, 13.698630, 14.285714, 14.285714,
    14.285714, 14.084507, 14.084507, 14.285714, 13.698630, 13.513514, 13.888889, 13.513514, 13.698630, 12.820513, 13.513514, 13.333333,
    13.888889, 13.157895, 13.698630, 13.513514, 14.492754, 13.333333, 13.513514, 13.513514, 13.888889, 13.157895, 13.513514, 13.333333
]

geo_ms_lev10 = [
    16.393443, 16.393443, 16.393443, 16.666667, 16.666667, 16.666667, 16.666667, 16.666667, 16.666667, 16.666667, 16.666667, 16.666667,
    16.666667, 16.666667, 16.666667, 16.949153, 16.949153, 16.949153, 16.949153, 16.949153, 16.949153, 16.949153, 16.949153, 16.949153,
    16.949153, 16.949153, 16.949153, 16.949153, 16.949153, 16.949153, 16.949153, 16.949153, 16.949153, 16.949153, 16.949153, 17.241379,
    17.241379, 17.241379, 17.241379, 17.241379, 17.241379, 17.241379, 17.241379, 17.241379, 17.241379, 17.543860, 17.543860, 17.543860,
    17.857143, 17.857143, 17.857143, 17.181818, 17.181818, 17.181818, 17.181818, 17.408163, 17.222222, 17.727273, 17.255814, 17.390244
]

cdlod_ms_lev5 = [
    4.950495, 5.917160, 6.369427, 6.622517, 7.299270, 7.518797, 7.633588, 7.692308, 7.692308, 7.751938, 7.751938, 7.936508, 7.936508,
    8.064516, 8.064516, 8.130081, 8.196721, 8.264463, 8.474576, 8.474576, 8.547009, 8.620690, 8.620690, 8.695652, 8.695652, 8.695652,
    8.771930, 8.849558, 8.849558, 8.928571, 9.009009, 9.009009, 9.090909, 9.174312, 9.174312, 9.174312, 9.174312, 9.259259, 9.345794,
    9.345794, 9.345794, 9.345794, 9.345794, 9.345794, 9.523810, 9.523810, 9.708738, 9.900990, 9.900990, 9.900990, 10.309278, 10.309278,
    10.416667, 10.752688, 10.869565, 10.989011, 11.111111, 11.494253, 11.764706, 12.987013
]

cdlod_ms_lev10 = [
    6.896552, 8.547009, 8.771930, 8.928571, 9.174312, 9.259259, 9.345794, 9.433962, 9.523810, 9.523810, 9.615385, 9.708738, 9.803922,
    10.000000, 10.000000, 10.101010, 10.101010, 10.204082, 10.204082, 10.204082, 10.526316, 10.752688, 10.752688, 10.869565, 10.989011,
    10.989011, 10.989011, 10.989011, 11.111111, 11.111111, 11.235955, 11.235955, 11.235955, 11.235955, 11.363636, 11.363636, 11.494253,
    11.627907, 11.627907, 11.627907, 11.627907, 11.627907, 11.764706, 11.904762, 12.048193, 12.195122, 12.195122, 12.345679, 12.345679,
    12.345679, 12.345679, 12.345679, 12.500000, 12.500000, 12.658228, 12.820513, 13.157895, 13.333333, 13.333333, 14.492754
]

def main():
    plotting_mem_usage()
    plotting_ms_per_frame()

def autolabel(rects, ax):
    for rect in rects:
        height = rect.get_height()
        ax.annotate('{}'.format(height),
            xy = (rect.get_x() + rect.get_width() / 2, height),
            xytext = (0, 3),
            textcoords = "offset points",
            ha = 'center',
            va = 'bottom')

def plotting_mem_usage():
    fig, ax = plt.subplots()

    width = 0.35
    labels = ['LOD 5', 'LOD 10']
    x = np.arange(len(labels)) 

    rects1 = ax.bar(x - width / 2, [geo_lev5, geo_lev10], width, label='Geometry clipmaps')
    rects2 = ax.bar(x + width / 2, [cdlod_lev5, cdlod_lev10], width, label='CDLOD')

    ax.set_ylabel('Megabytes (MB)')
    ax.set_title('Average RAM usage')
    ax.set_xticks(x)
    ax.set_xticklabels(labels)
    ax.legend(loc='lower right')

    autolabel(rects1, ax)
    autolabel(rects2, ax)

    fig.tight_layout()
    plt.savefig('alg_mem_usage', dpi=200)

def plotting_ms_per_frame():
    fig, ax = plt.subplots()
    ax.set_xlabel('elapsed time (seconds)')
    ax.set_ylabel('render time (milliseconds)')
    ax.set_title('Time required to render a single frame')

    one_minute = np.arange(0, 60)

    plt.plot(one_minute, geo_ms_lev5, label = 'Geometry clipmaps (LOD 5)')
    plt.plot(one_minute, geo_ms_lev10, label = 'Geometry clipmaps (LOD 10)')
    plt.plot(one_minute, cdlod_ms_lev5, label = 'CDLOD (LOD 5)')
    plt.plot(one_minute, cdlod_ms_lev10, label = 'CDLOD (LOD 10)')

    ax.legend(loc='lower right')

    fig.tight_layout()
    plt.savefig('alg_ms_per_frame', dpi=200)

if __name__ == "__main__":
    main()
